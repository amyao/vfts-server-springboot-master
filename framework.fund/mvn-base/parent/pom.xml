<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.4.4</version>
</parent>
  <groupId>com.vfts</groupId>
  <artifactId>maven-parent</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <name>Maven Common Parent Pom</name>
  <url/>
  <properties>
	<!--
		版本号组成：主版本号.次版本号.分支号.版本库修订号
		Major ：具有相同名称但不同主版本号的程序集不可互换。例如，这适用于对产品的大量重写，这些重写使得无法实现向后兼容性。
		Minor ：如果两个程序集的名称和主版本号相同，而次版本号不同，这指示显著增强，但照顾到了向后兼容性。例如，这适用于产品的修正版或完全向后兼容的新版本。
		Build ：内部版本号的不同表示对相同源所作的重新编译。这适合于更改处理器、平台或编译器的情况。
		<product.version>0.0.3-SNAPSHOT</product.version>
	-->
	<product.version>1.0.0</product.version>
  	<product.groupId>com.vfts</product.groupId>
	<framework.groupId>com.vfts.framework</framework.groupId>
  	<product.deps.pom.version>1.0.0</product.deps.pom.version>
  	<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
	<frontend.src.dir>src/main/resources/ui</frontend.src.dir>
	<nodejs.install.dir>../../../tools</nodejs.install.dir>
	<springboot.version>2.4.4</springboot.version>
	<flyway.version>5.2.4</flyway.version>
	<tomcat.version>8.5.59</tomcat.version>
	<jackson.version.core>2.10.3</jackson.version.core>
	<jackson.version.dataformat>${jackson.version.core}</jackson.version.dataformat>
	<org.mybatis.version>3.5.6</org.mybatis.version>
  </properties>
  
  <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <framework.version>${product.version}-SNAPSHOT</framework.version>
				<sdk.version>${product.version}-SNAPSHOT</sdk.version>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prd</id>
            <properties>
				<framework.version>${product.version}</framework.version>
                <sdk.version>${product.version}</sdk.version>
            </properties>
        </profile>
    </profiles>
  
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Finchley.SR1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
  <build>
	<pluginManagement>
	  <plugins>
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <version>2.3.1</version>
		  <configuration>
			<source>1.8</source>
			<target>1.8</target>			
		  </configuration>
		</plugin>
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-resources-plugin</artifactId>
		  <version>2.4.3</version>
		</plugin>
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-jar-plugin</artifactId>
		  <version>2.3.1</version>
		</plugin>
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-assembly-plugin</artifactId>
		  <version>2.2</version>
		</plugin>
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-surefire-plugin</artifactId>
		  <version>2.7.1</version>
		  <configuration>
			<!-- 默认情况下有测试错误也继续构建 -->
			<testFailureIgnore>true</testFailureIgnore>
		  </configuration>
		</plugin>
		  <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-source-plugin</artifactId>
			  <version>2.1.2</version>
		  </plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-deploy-plugin</artifactId>
		  <version>2.6</version>
		</plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-javadoc-plugin</artifactId>
		  <version>2.7</version>
		</plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-antrun-plugin</artifactId>
		  <version>1.8</version>
		</plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-dependency-plugin</artifactId>
		  <version>3.1.1</version>
		</plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-clean-plugin</artifactId>
		  <version>2.4.1</version>
		</plugin>

		<plugin>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>1.6</version>
			<configuration>
				<installDirectory>../../tools</installDirectory>  <!-- 该插件的安装位置 -->
				<!-- webpack的工作目录，所有的配置文件/package.json/component/js及all所有和react有关的文件都在这个目录里存放 -->
				<workingDirectory>${frontend.src.dir}</workingDirectory> 
				<!--
				在淘宝仓库上没有tgz的文件，而组件中写死了要tgz，所以会找不到文件：http://npm.taobao.org/mirrors/npm/npm-5.5.1.tgz
				但是在仓库 https://registry.npmjs.org/npm/-/npm-5.5.1.tgz 上有这个文件
				<npmDownloadRoot>http://npm.taobao.org/mirrors/npm/</npmDownloadRoot>-->
				
				<nodeDownloadRoot>http://npm.taobao.org/mirrors/node/</nodeDownloadRoot>
			</configuration>
			<executions>
				<execution>
					<id>install node and npm</id> <!-- webpack必须有node支持 -->
					<phase>generate-resources</phase>
					<goals>
						<goal>install-node-and-npm</goal>
					</goals>
					<configuration>
						<nodeVersion>v8.9.3</nodeVersion>
						<npmVersion>5.5.1</npmVersion>
					</configuration>
				</execution>
				<execution>
					<id>npm install</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>npm</goal>
					</goals>
					<configuration>
						<arguments>install</arguments>
						<installDirectory>../../tools</installDirectory>  <!-- 该插件的安装位置 -->
						<!-- webpack的工作目录，所有的配置文件/package.json/component/js及all所有和react有关的文件都在这个目录里存放 -->
						<workingDirectory>${frontend.src.dir}</workingDirectory> 
					</configuration>
				</execution>
				<execution>
					<id>npm run build</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>npm</goal>
					</goals>
					<configuration>
					  <arguments>run build</arguments>
					</configuration>
				  </execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>com.github.kongchen</groupId>
			<artifactId>swagger-maven-plugin</artifactId>
			<version>3.1.7</version>
			<configuration>
				<apiSources>
					<apiSource>
						<springmvc>true</springmvc> <!-- false为JAX-RS -->
						<locations>com.vfts</locations>
						<schemes>http,https</schemes>
						<basePath>/rest</basePath>
						<info>
							<title>RTP REST APIs</title>
							<version>v1</version>
							<description>This is a sample for swagger-maven-plugin</description>
							<termsOfService>
								http://www.github.com/kongchen/swagger-maven-plugin
							</termsOfService>
						</info>
						<outputPath>${project.build.directory}/generated/document.html</outputPath>
						<swaggerDirectory>${project.build.directory}/generated/swagger-ui</swaggerDirectory>
                        <attachSwaggerArtifact>true</attachSwaggerArtifact>
                        <jsonExampleValues>true</jsonExampleValues>
					</apiSource>
				</apiSources>
			</configuration>
			<executions>
				<execution>
					<phase>compile</phase>
					<goals>
						<goal>generate</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
		  <groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
		  <artifactId>maven-svn-revision-number-plugin</artifactId>
		  <version>1.7</version>
		  <configuration>
			<verbose>true</verbose>
			<entries>
			  <entry>
				<prefix>svn</prefix>
			  </entry>
			</entries>
		  </configuration>
		  <executions>
			<execution>
			  <id>revision</id>
			  <phase>validate</phase>
			  <goals>
				<goal>revision</goal>
			  </goals>
			</execution>
		  </executions>
		  <dependencies>
			<dependency>
			  <groupId>org.tmatesoft.svnkit</groupId>
			  <artifactId>svnkit</artifactId>
			  <version>1.8.5</version>
			</dependency>
		  </dependencies>
		</plugin>
		<plugin>
			  <groupId>pl.project13.maven</groupId>
			  <artifactId>git-commit-id-plugin</artifactId>
			  <executions>
				  <execution>
					  <goals>
						  <goal>revision</goal>
					  </goals>
				  </execution>
			  </executions>
			  <configuration>
				  <verbose>true</verbose>
				  <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
				  <generateGitPropertiesFile>true</generateGitPropertiesFile>
				  <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
				  <format>json</format>
				  <gitDescribe>
					  <skip>false</skip>
					  <always>false</always>
					  <dirty>-dirty</dirty>
				  </gitDescribe>
			  </configuration>
		</plugin>
	  </plugins>
	</pluginManagement>

	<resources>
	  <resource>
		<directory>src/main/java</directory>
		<filtering>false</filtering>
		<excludes>
		  <exclude>**/*.java</exclude>
		</excludes>
	  </resource>
	</resources>
  </build>

  <!-- 所有项目必然会用到的依赖放到这里 -->
  <dependencies>
  
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-datatype-jdk8</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-module-parameter-names</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version.core}</version>
      <scope>compile</scope>
    </dependency>
	<dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version.core}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version.core}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version.core}</version>
      <scope>compile</scope>
    </dependency>
	<dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version.dataformat}</version>
      </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-parameter-names</artifactId>
      <version>${jackson.version.dataformat}</version>
      <scope>compile</scope>
    </dependency>
	
	<!-- JUNIT是都要用的 -->
	<dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.12</version>
	  <type>jar</type>
	  <scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.mybatis.generator</groupId>
		<artifactId>mybatis-generator-core</artifactId>
		<version>1.3.7</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<!--version>1.18.0</version-->
	</dependency>
	<dependency>
	  <groupId>org.slf4j</groupId>
	  <artifactId>slf4j-log4j12</artifactId>
	  <version>1.7.25</version>
	</dependency>
	  <dependency>
		  <groupId>org.mybatis</groupId>
		  <artifactId>mybatis</artifactId>
		  <version>${org.mybatis.version}</version>
		  <scope>provided</scope>
	  </dependency>
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>fastjson</artifactId>
		<version>1.2.73</version>
	</dependency>
	<dependency>
		<groupId>io.swagger</groupId>
		<artifactId>swagger-annotations</artifactId>
		<version>1.5.20</version>
	</dependency>
	<dependency>
		<groupId>io.swagger</groupId>
		<artifactId>swagger-models</artifactId>
		<version>1.5.20</version>
	</dependency>
	<dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
		<version>20.0</version>
	</dependency>

  </dependencies>

	<distributionManagement>  
        <repository>  
            <id>releases</id>  
            <url>  
                http://${repository.url}/artifactory/libs-release-local
            </url>  
        </repository>  
        <snapshotRepository>  
            <id>snapshots</id>  
            <url>  
                http://${repository.url}/artifactory/libs-snapshot-local
            </url>  
        </snapshotRepository>  
    </distributionManagement>
	<repositories>
		<repository>
			<id>repo</id>
			<name>repo</name>
			<url>http://${repository.url}/artifactory/libs-snapshot-local</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
</project>